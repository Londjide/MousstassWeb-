name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          cd backend
          npm install
      
      - name: Run ESLint
        run: |
          cd backend
          npm run lint
          mkdir -p ../reports
          npm run lint -- --format json -o ../reports/eslint-report.json || true
      
      - name: Run tests with coverage
        run: |
          cd backend
          npm test
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: backend/coverage
  
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: backend/coverage
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
  deploy:
    name: Deploy (if main)
    runs-on: ubuntu-latest
    needs: [test, sonarcloud]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up environment
        run: |
          echo "Déploiement de l'application dans l'environnement de production"
          
      - name: Build Docker images
        run: |
          docker-compose build
          
      - name: Simulate deployment
        run: |
          echo "Application déployée avec succès!" 